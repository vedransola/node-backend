name: Deploy to EC2

on:
  push:
    branches:
      - master  # Change this to your preferred branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  # Change to your desired Node.js version

      - name: Install dependencies
        run: npm install

      - name: Build the app
        run: npm run build  # Ensure you have a build script in package.json

      - name: Archive production artifacts
        run: |
          mkdir -p release  # Create a release directory
          cp -R ./* # Copy everything to the release directory
          cp -R ./.* # Include hidden files (like .env if needed)
          cd release
          tar -czf app.tar.gz .  # Create a tarball from the release directory

      - name: Copy files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}  # Your EC2 public IP
          username: ${{ secrets.DEPLOY_USER }}  # Change to your EC2 username
          key: ${{ secrets.DEPLOY_KEY }}  # Your EC2 SSH key
          port: 22  # Change if you're using a different port
          source: "release/app.tar.gz"  # The file you want to transfer
          target: "/home/ubuntu/deploy"  # Change to your app's directory on EC2

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}  # Your EC2 public IP
          username: ${{ secrets.DEPLOY_USER }}  # Change to your EC2 username
          key: ${{ secrets.DEPLOY_KEY }}  # Your EC2 SSH key
          port: 22  # Change if you're using a different port
          script: |
            cd /home/ubuntu/deploy
            tar -xzf app.tar.gz
            npm install --production  # Install only production dependencies
