name: Node.js CI

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build the application
        env:
          MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
          MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
          MONGODB_DATABASE: ${{ secrets.MONGODB_DATABASE }}
          MONGODB_APPNAME: ${{ secrets.MONGODB_APPNAME }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: npm run build

      - name: Create .env
        run: |
          touch .env
          echo "MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }}" > .env
          echo "MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }}" >> .env
          echo "MONGODB_DATABASE=${{ secrets.MONGODB_DATABASE }}" >> .env
          echo "MONGODB_APPNAME=${{ secrets.MONGODB_APPNAME }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
          echo "POSTGRES_DATABASE=${{ secrets.POSTGRES_DATABASE }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: >
      github.event_name == 'push' && github.ref == 'refs/heads/master' ||
      (github.event_name == 'pull_request' &&
       github.event.action == 'closed' &&
       github.ref == 'refs/heads/master' &&
       github.event.pull_request.merged == true)

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 20.x to Build
        uses: actions/setup-node@v2
        with:
          node-version: 20.x
      - run: npm install
      - run: CI=false npm run build
      - name: Transfer Build Folder on EC2 Instance
        uses: easingthemes/ssh-deploy@v2.1.4
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
          REMOTE_HOST: ${{ secrets.DEPLOY_HOST }}
          REMOTE_USER: ${{ secrets.DEPLOY_USER }}
          REMOTE_PORT: ${{ secrets.DEPLOY_PORT }}
          SOURCE: "dist/"
          TARGET: ${{ secrets.DEPLOY_TARGET }}
