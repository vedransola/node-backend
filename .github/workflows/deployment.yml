name: Deploy to EC2

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build the app
        run: npm run build

      - name: Archive production artifacts
        run: tar -czf whitepouches.tar.gz ./dist ./package.json ./generate-jwt.ts

      - name: Upload production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: whitepouches
          path: whitepouches.tar.gz

  deploy:
    needs: build
    runs-on: ubuntu-latest

    if: >
      github.event_name == 'push' && github.ref == 'refs/heads/master' ||
      (github.event_name == 'pull_request' &&
      github.event.action == 'closed' &&
      github.ref == 'refs/heads/master' &&
      github.event.pull_request.merged == true)

    steps:
      - name: Download production artifacts
        uses: actions/download-artifact@v4
        with:
          name: whitepouches

      - name: Copy files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          source: 'whitepouches.tar.gz'
          target: '/home/ubuntu/deploy'

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            cd /home/ubuntu/deploy
            tar -xzf whitepouches.tar.gz
            rm -rf whitepouches.tar.gz
            npm install

            # Create .env file on EC2 instance
            touch /home/ubuntu/deploy/dist/.env
            echo "MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }}" >> .env
            echo "MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }}" >> .env
            echo "MONGODB_DATABASE=${{ secrets.MONGODB_DATABASE }}" >> .env
            echo "MONGODB_APPNAME=${{ secrets.MONGODB_APPNAME }}" >> .env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
            echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
            echo "POSTGRES_DATABASE=${{ secrets.POSTGRES_DATABASE }}" >> .env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
