name: Deploy to EC2

on:
  push:
    branches:
      - master # Change this to your preferred branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18' # Change to your desired Node.js version

      - name: Install dependencies
        run: npm install

      - name: Build the app
        run: npm run build # Ensure you have a build script in package.json

      - name: Archive production artifacts
        run: tar -czf app.tar.gz ./dist ./package.json # Adjust as needed

      - name: Copy files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }} # Your EC2 public IP
          username: ${{ secrets.DEPLOY_USER }} # Change to your EC2 username
          key: ${{ secrets.DEPLOY_KEY }} # Your EC2 SSH key
          port: 22 # Change if you're using a different port
          source: 'app.tar.gz' # The file you want to transfer
          target: '/home/ubuntu/deploy' # Change to your app's directory on EC2

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }} # Your EC2 public IP
          username: ${{ secrets.DEPLOY_USER }} # Change to your EC2 username
          key: ${{ secrets.DEPLOY_KEY }} # Your EC2 SSH key
          port: 22 # Change if you're using a different port
          script: |
            cd /home/ubuntu/deploy
            tar -xzf app.tar.gz
            npm install

      - name: Create .env file
        run: |
          touch dist/.env
          echo "MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }}" > .env
          echo "MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }}" >> .env
          echo "MONGODB_DATABASE=${{ secrets.MONGODB_DATABASE }}" >> .env
          echo "MONGODB_APPNAME=${{ secrets.MONGODB_APPNAME }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
          echo "POSTGRES_DATABASE=${{ secrets.POSTGRES_DATABASE }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
